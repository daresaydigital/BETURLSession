


@interface NSURLSession (Private)
@property(readonly) __BETInternalSession * bet_internalSession;
@property(strong,setter = bet_setRequestSerializer:)  BETURLSessionRequestSerializer<BETURLSessionRequestSerializing> *    bet_serializerForRequest;
@property(strong,setter = bet_setResponseSerializer:) BETURLSessionResponseSerializer<BETURLSessionResponseSerializing> *   bet_serializerForResponse;
@end

@interface NSURLSessionTask (Private)
@property(readonly) __BETInternalSessionTask * bet_internalSessionTask;
@end


@protocol BETPerforming <NSObject>
-(void)bet_performSelector:(SEL)theSelector withObject:(id)theObject;
-(id)bet_performSelector:(SEL)theSelector;
@end


@interface __BETInternalSession ()
<BETPerforming>

@property(strong,setter = bet_setRequestSerializer:)  BETURLSessionRequestSerializer<BETURLSessionRequestSerializing> *    bet_serializerForRequest;
@property(strong,setter = bet_setResponseSerializer:) BETURLSessionResponseSerializer<BETURLSessionResponseSerializing> *   bet_serializerForResponse;


@property(nonatomic,strong,setter = bet_setDelegate:) id<NSURLSessionDataDelegate, NSURLSessionDownloadDelegate> bet_delegate;

@property(nonatomic,strong, setter = bet_setBaseUrl:)    NSURL                  * bet_baseURL;
@property(nonatomic,copy,setter = bet_setSessionName:)   NSString               * bet_sessionName;

@property(assign,getter = bet_isAutoResumed,setter = bet_setAutoResumed:) BOOL bet_autoResumed;

//@property(nonatomic,copy,setter = bet_setTaskWillBeginRequestBlock:) BETURLSessionTaskLifeCycleRequestBlock bet_taskWillBeginRequestBlock;
//@property(nonatomic,copy,setter = bet_setTaskDidBeginRequestBlock:) BETURLSessionTaskLifeCycleRequestBlock bet_taskDidBeginRequestBlock;
//@property(nonatomic,copy,setter = bet_setTaskDidRequestBlock:) BETURLSessionTaskLifeCycleRequestBlock bet_taskDidRequestBlock;
//@property(nonatomic,copy,setter = bet_setTaskWillEndRequestBlock:) BETURLSessionTaskLifeCycleRequestBlock bet_taskWillEndRequestBlock;
//@property(nonatomic,copy,setter = bet_setTaskDidEndRequestBlock:) BETURLSessionTaskLifeCycleRequestBlock bet_taskDidEndRequestBlock;

#pragma mark - Privates
-(void)buildInternalSessionTaskWithURLSessionTask:(NSURLSessionTask *)theURLSessionTask;
@property(nonatomic,strong) NSMapTable            * mapTasks;
@property(nonatomic,weak)   NSURLSession          * URLSession;

@end


@interface __BETInternalSessionTask ()
<BETPerforming>
@property(nonatomic,strong) __BETInternalSession * internalSession;
@property(nonatomic,strong,setter = bet_setParseResponseError:) NSError * bet_parseResponseError;
@property(nonatomic,strong,setter = bet_setParseRequestError:) NSError * bet_parseRequestError;
@property(nonatomic,copy,setter = bet_setError:) NSError * bet_error;
@property(nonatomic,strong,setter = bet_setData:) NSData * bet_data;
@property(nonatomic,copy,setter = bet_setDownloadLocation:) NSURL * bet_downloadLocation;
@property(nonatomic,strong,setter = bet_setParsedObject:) id bet_parsedObject;



@property(nonatomic,copy,setter = bet_setRequestDataCompleteBlock:) BETURLSessionTaskRequestDataCompletionBlock bet_requestDataCompleteBlock;
@property(nonatomic,copy,setter = bet_setRequestCompleteBlock:) BETURLSessionTaskRequestCompletionBlock bet_requestCompleteBlock;
@property(nonatomic,copy,setter = bet_setUploadProgressBlock:) BETURLSessionTaskProgressHandlerBlock bet_uploadProgressBlock;

@property(nonatomic,copy,setter = bet_setDownloadProgressBlock:) BETURLSessionTaskProgressHandlerBlock bet_downloadProgressBlock;

#pragma mark - <NSURLSessionTaskDelegate>
@property(nonatomic,copy,setter = bet_setTaskWillPerformHTTPRedirectionBlock:) BETURLSessionTaskRedirectHandlerBlock bet_taskWillPerformHTTPRedirectionBlock;
@property(nonatomic,copy,setter = bet_setTaskDidReceiveChallenge:) BETURLSessionTaskDidRecieveChallengeHandlerBlock bet_taskDidReceiveChallenge;
@property(nonatomic,copy,setter = bet_setTaskNeedNewBodyStreamBlock:) BETURLSessionTaskNeedNewBodyStreamHandlerBlock bet_taskNeedNewBodyStreamBlock;
@property(nonatomic,copy,setter = bet_setTaskDidCompleteWithErrorBlock:) BETURLSessionTaskDidCompleteWithErrorHandlerBlock bet_taskDidCompleteWithErrorBlock;



#pragma mark - <NSURLSessionDataDelegate>
@property(nonatomic,copy,setter = bet_setTaskDidReceiveResponseBlock:) BETURLSessionTaskDidReceiveResponseHandlerBlock bet_taskDidReceiveResponseBlock;
@property(nonatomic,copy,setter = bet_setTaskBecomeDownloadTaskBlock:) BETURLSessionTaskDidBecomeDownloadTaskCompletionBlock bet_taskBecomeDownloadTaskBlock;

@property(nonatomic,copy,setter = bet_setTaskDidReceiveDataBlock:) BETURLSessionTaskDidReceiveDataCompletionBlock bet_taskDidReceiveDataBlock;
@property(nonatomic,copy,setter = bet_setTaskWillCacheResponseBlock:) BETURLSessionTaskWillCacheResponseHandlerBlock bet_taskWillCacheResponseBlock;

#pragma mark - <NSURLSessionDownloadDelegate>
@property(nonatomic,copy,setter = bet_setTaskDidFinishDownloadingToURLBlock:)BETURLSessionTaskDidFinishDownloadingToURLCompletion bet_taskDidFinishDownloadingToURLBlock;

@property(nonatomic,copy,setter = bet_setTaskDidResumeAtOffsetBlock:) BETURLSessionTaskDidResumeAtOffsetHandler bet_taskDidResumeAtOffsetBlock;



@end


@interface __BETInternalManager ()
@property(nonatomic,strong) NSMapTable * mapSessions;
@property(nonatomic,strong) NSMapTable * mapConfigurations;

+(instancetype)sharedManager;
+(NSURLSession *)sessionWithName:(NSString *)theSessionName;
+(void)addURLSession:(NSURLSession *)theURLSession
     withSessionName:(NSString *)theSessionName
          andBaseURL:(NSURL *)theBaseURL;


+(__BETInternalSession *)internalSessionForURLSession:(NSURLSession *)theURLSession;
+(__BETInternalSessionTask *)internalSessionTaskForURLSessionTask:(NSURLSessionTask *)theURLSessionTask;


@end
